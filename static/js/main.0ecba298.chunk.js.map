{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.jsx","components/sectionTitle/SectionTitle.jsx","components/notificationMessage/NotificationMessage.jsx","components/statistics/Statistics.jsx","App.jsx","reportWebVitals.js","index.js","components/statistics/Statistics.module.css"],"names":["FeedbackOptions","optionGood","optionNeutral","optionBad","addGoodButton","addNeutralButton","addBadButton","type","onClick","className","style","good","neutral","bad","SectionTitle","title","children","NotificationMessage","message","options","Statistics","state","props","total","percentage","setState","countTotal","countPercentage","container","this","Math","round","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0ecba298.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"../statistics/Statistics.module.css\";\n\nconst FeedbackOptions = ({\n  optionGood,\n  optionNeutral,\n  optionBad,\n  addGoodButton,\n  addNeutralButton,\n  addBadButton,\n}) => {\n  return (\n    <div>\n      <button type=\"button\" onClick={addGoodButton} className={style.good}>\n        {optionGood}\n      </button>\n      <button\n        type=\"button\"\n        onClick={addNeutralButton}\n        className={style.neutral}\n      >\n        {optionNeutral}\n      </button>\n      <button type=\"button\" onClick={addBadButton} className={style.bad}>\n        {optionBad}\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default SectionTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst NotificationMessage = ({ message }) => {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nNotificationMessage.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default NotificationMessage;\n","import React, { Component } from \"react\";\nimport style from \"./Statistics.module.css\";\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\nimport SectionTitle from \"../sectionTitle/SectionTitle\";\nimport NotificationMessage from \"../notificationMessage/NotificationMessage\";\n\nconst options = {\n  optionGood: \"Good\",\n  optionNeutral: \"Neutral\",\n  optionBad: \"Bad\",\n};\n\nclass Statistics extends Component {\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n    total: this.props.total,\n    percentage: this.props.percentage,\n  };\n\n  addGoodButton = () => {\n    this.setState((state) => ({\n      good: state.good + 1,\n    }));\n    this.countTotal();\n    this.countPercentage();\n  };\n\n  addNeutralButton = () => {\n    this.setState((state) => ({\n      neutral: state.neutral + 1,\n    }));\n    this.countTotal();\n    this.countPercentage();\n  };\n\n  addBadButton = () => {\n    this.setState((state) => ({\n      bad: state.bad + 1,\n    }));\n    this.countTotal();\n    this.countPercentage();\n  };\n\n  countTotal = () => {\n    this.setState((state) => ({\n      total: state.good + state.neutral + state.bad,\n    }));\n  };\n\n  countPercentage = () => {\n    this.setState((state) => ({\n      percentage: (state.good / state.total) * 100,\n    }));\n  };\n\n  render() {\n    return (\n      <div className={style.container}>\n        <SectionTitle title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            {...options}\n            addGoodButton={this.addGoodButton}\n            addNeutralButton={this.addNeutralButton}\n            addBadButton={this.addBadButton}\n          />\n        </SectionTitle>\n\n        <SectionTitle title={\"Statistics\"}>\n          {this.state.total > 0 ? (\n            <section>\n              <p>\n                Good: <span>{this.state.good}</span>\n              </p>\n              <p>\n                Neutral: <span>{this.state.neutral}</span>\n              </p>\n              <p>\n                Bad: <span>{this.state.bad}</span>\n              </p>\n              <p>\n                Total: <span>{this.state.total}</span>\n              </p>\n              <p>\n                Positive feedback:{\" \"}\n                <span>{Math.round(this.state.percentage)}%</span>\n              </p>\n            </section>\n          ) : (\n            <NotificationMessage message={\"No feedback given\"} />\n          )}\n        </SectionTitle>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n","import \"./App.css\";\nimport Statistics from \"./components/statistics/Statistics\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Statistics good={0} neutral={0} bad={0} total={0} percentage={0} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__30xuo\",\"neutral\":\"Statistics_neutral__3VbFc\",\"good\":\"Statistics_good__3yJzn\",\"bad\":\"Statistics_bad__1fknR\"};"],"sourceRoot":""}